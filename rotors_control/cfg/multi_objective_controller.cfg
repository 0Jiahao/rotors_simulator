#!/usr/bin/env python
PACKAGE = "rotors_control"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("mav_position_gain_x",    int_t,    0, "", 700,  0, 1000)
gen.add("mav_position_gain_y",    int_t,    0, "", 700,  0, 1000)
gen.add("mav_position_gain_z",    int_t,    0, "", 30,  0, 1000)

gen.add("mav_velocity_gain_x",    int_t,    0, "", 900,  0, 1000)
gen.add("mav_velocity_gain_y",    int_t,    0, "", 900,  0, 1000)
gen.add("mav_velocity_gain_z",    int_t,    0, "", 40,  0, 1000)

gen.add("mav_attitude_gain_roll",    int_t,    0, "", 40,  0, 1000)
gen.add("mav_attitude_gain_pitch",    int_t,    0, "", 40,  0, 1000)
gen.add("mav_attitude_gain_yaw",    int_t,    0, "", 30,  0, 1000)

gen.add("mav_angular_rate_gain_roll",    int_t,    0, "", 20,  0, 1000)
gen.add("mav_angular_rate_gain_pitch",    int_t,    0, "", 20,  0, 1000)
gen.add("mav_angular_rate_gain_yaw",    int_t,    0, "", 40,  0, 1000)

gen.add("arm_joints_angle_gain_pitch",    int_t,    0, "", 400,  0, 1000)
gen.add("arm_joints_angle_gain_left",    int_t,    0, "", 400,  0, 1000)
gen.add("arm_joints_angle_gain_right",    int_t,    0, "", 400,  0, 1000)

gen.add("arm_joints_ang_rate_gain_pitch",    int_t,    0, "", 70,  0, 1000)
gen.add("arm_joints_ang_rate_gain_left",    int_t,    0, "", 100,  0, 1000)
gen.add("arm_joints_ang_rate_gain_right",    int_t,    0, "", 100,  0, 1000)

gen.add("mu_attitude",    int_t,    0, "", 100,  0, 1000)
gen.add("mu_arm",    int_t,    0, "", 50,  0, 1000)

gen.add("safe_range_rpy", double_t, 0, "", .5, 0,   1)
gen.add("safe_range_joints", double_t, 0, "", .9, 0,   1)

mav_enum = gen.enum([ gen.const("Full_Attitude",      int_t, 0, "Full mav attitude control"),
                       gen.const("Yaw",     int_t, 1, "Only yaw control"),
                       gen.const("Hovering_Mode",      int_t, 2, "Hovering mode")],
                     "mav objective functions")
gen.add("mav_objective_function", int_t, 0, "", 0, 0, 2, edit_method=mav_enum)
gen.add("value_mav",    int_t,    0, "", 1,  0, 5)

arm_enum = gen.enum([ gen.const("Manipulator_Joints",      int_t, 3, "Direct arm joints control"),
                       gen.const("End_Effector",     int_t, 4, "End-effector position control"),
                       gen.const("Dead_Arm",      int_t, 5, "Dead arm mode")],
                     "manipulator objective functions")
gen.add("manipulator_objective_function", int_t, 0, "", 3, 3, 5, edit_method=arm_enum)
gen.add("value_arm",    int_t,    0, "", 1,  0, 5)

exit(gen.generate(PACKAGE, "rotors_control", "MultiObjectiveController"))
