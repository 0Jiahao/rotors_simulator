<?xml version="1.0" ?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="OS-1">
  <xacro:property name="M_PI" value="3.1415926535897931" />
  <xacro:property name="m1" value="0.15"/>
  <xacro:property name="r1" value="0.0425"/>
  <xacro:property name="l1" value="0.0211"/>
  <xacro:property name="m2" value="0.08"/>
  <xacro:property name="r2" value="0.0425"/>
  <xacro:property name="l2" value="0.0305"/>
  <xacro:macro name="OS-1" params="*origin parent:=world sensor_name:=os1 topic:=/os1_points horizontal_angular_resolution_deg:=0.18 spin_frequency_hz:=10 lidar_base_frame:=os1_base lidar_points_frame:=os1_top namespace:=example min_range:=0.05">
    <gazebo>
      <plugin name="JointController" filename="libgazebo_ros_continous_joint_controller_plugin.so">
        <joint>${namespace}/${sensor_name}_joint</joint>
	      <robot_namespace>${namespace}</robot_namespace>
	      <default_velocity_limit>100</default_velocity_limit>
        <spin_frequency_hz>${spin_frequency_hz}</spin_frequency_hz>
      </plugin>
    </gazebo>

    <joint name="${namespace}/${lidar_base_frame}_mount_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent}"/>
      <child link="${namespace}/${lidar_base_frame}"/>
    </joint>

    <link name="${namespace}/${lidar_base_frame}">
      <inertial>
        <mass value="${m1}"/>
        <origin rpy="0 0 0" xyz="0 0 ${l1*0.5}"/>
        <inertia ixx="${(m1 * (3.0*r1*r1 + l1*l1)) / 12.0}" ixy="0" ixz="0"
                 iyy="${(m1 * (3.0*r1*r1 + l1*l1)) / 12.0}" iyz="0"
                 izz="${0.5 * m1 * (r1*r1)}"/>
      </inertial>
      <collision name="${namespace}/${lidar_base_frame}_collision">
        <origin rpy="0 0 0" xyz="0 0 ${l1*0.5}"/>
        <geometry>
          <cylinder length="${l1}" radius="${r1}"/>
        </geometry>
      </collision>
      <visual name="${namespace}/${lidar_base_frame}_visual">
        <origin rpy="0 0 0" xyz="0 0 ${l1*0.5}"/>
        <geometry>
          <cylinder length="${l1}" radius="${r1}"/>
        </geometry>
      </visual>
    </link>

    <joint name="${namespace}/${sensor_name}_joint" type="continuous">
      <parent link="${namespace}/${lidar_base_frame}"/>
      <child link="${namespace}/${lidar_points_frame}"/>
      <origin rpy="0 0 0" xyz="0 0 ${l1+l2*0.5}"/>
      <axis xyz="0 0 1"/>
      <limit effort="100.0" velocity="100.0"/>
    </joint>

    <link name="${namespace}/${lidar_points_frame}">
      <inertial>
        <mass value="${m2}"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <inertia ixx="${(m2 * (3.0*r2*r2 + l2*l2)) / 12.0}" ixy="0" ixz="0"
                 iyy="${(m2 * (3.0*r2*r2 + l2*l2)) / 12.0}" iyz="0"
                 izz="${0.5 * m2 * (r2*r2)}"/>
      </inertial>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <cylinder length="${l2}" radius="${r2}"/>
        </geometry>
      </collision>
      <visual name="${namespace}/${lidar_points_frame}_visual">
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <cylinder length="${l2}" radius="${r2}"/>
        </geometry>
      </visual>
    </link>
    <gazebo reference="${namespace}/${lidar_points_frame}">
      <material>Gazebo/Black</material>
    </gazebo>

    <joint name="${sensor_name}_joint_hat" type="fixed">
      <parent link="${namespace}/${lidar_base_frame}"/>
      <child link="${namespace}/${lidar_base_frame}_hat"/>
      <origin rpy="0 0 0" xyz="0 0 ${l1+l2*0.5}"/>
    </joint>

    <link name="${namespace}/${lidar_base_frame}_hat">
      <inertial>
        <mass value="${m1}"/>
        <origin rpy="0 0 0" xyz="0 0 ${(l1+l2)*0.5}"/>
        <inertia ixx="${(m1 * (3.0*r1*r1 + l1*l1)) / 12.0}" ixy="0" ixz="0"
                 iyy="${(m1 * (3.0*r1*r1 + l1*l1)) / 12.0}" iyz="0"
                 izz="${0.5 * m1 * (r1*r1)}"/>
      </inertial>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 ${(l1+l2)*0.5}"/>
        <geometry>
          <cylinder length="${l1}" radius="${r1}"/>
        </geometry>
      </collision>
      <visual>
        <origin rpy="0 0 0" xyz="0 0 ${(l1+l2)*0.5}"/>
        <geometry>
          <cylinder length="${l1}" radius="${r1}"/>
        </geometry>
      </visual>
    </link>

    <gazebo reference="${namespace}/${lidar_points_frame}">
      <!-- Add a ray sensor, and give it a name -->
      <sensor type="ray" name="sensor">
        <pose>0 0 0 0 0 0</pose>
        <!-- Enable visualization to see the rays in the GUI -->
        <visualize>true</visualize>

        <!-- Set the update rate of the sensor -->
        <update_rate>${360.0/horizontal_angular_resolution_deg*spin_frequency_hz}</update_rate>
        <ray>
          <noise>
            <!-- Use gaussian noise -->
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.02</stddev>
          </noise>
          <scan>
            <horizontal>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0</min_angle>
              <max_angle>${2*M_PI}</max_angle>
            </horizontal>
            <vertical>
              <samples>64</samples>
              <resolution>1</resolution>
              <min_angle>-${16.6*M_PI/180.0}</min_angle>
              <max_angle>${16.6*M_PI/180.0}</max_angle>
            </vertical>
          </scan>

          <!-- Range defines characteristics of an individual beam -->
          <range>
            <!-- Minimum distance of the beam -->
            <min>${min_range}</min>
            <!-- Maximum distance of the beam -->
            <max>120</max>
            <!-- Linear resolution of the beam -->
            <resolution>0.02</resolution>
          </range>
        </ray>
        <plugin name="gazebo_ros_laser_plugin" filename="libgazebo_ros_laser_plugin.so">
          <robot_namespace>${namespace}</robot_namespace>
          <joint_name>${namespace}/${sensor_name}_joint</joint_name>
          <topic_name>${topic}</topic_name>
          <frame_name>${lidar_points_frame}</frame_name>
          <min_range>${min_range}</min_range>
          <max_range>120</max_range>
          <gaussian_noise>0.02</gaussian_noise>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>
</robot>
