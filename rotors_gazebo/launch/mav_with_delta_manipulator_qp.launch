<launch>
	<!--
	<env name="ROSCONSOLE_CONFIG_FILE" 
	   value="$(find rotors_gazebo)/config/rosconsole.conf"/>
	-->

  <arg name="mav_name" default="firefly"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)_delta_manipulator" />
	<arg name="z" default="0.1" />

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/basic_bullet.world" />
    <!-- <arg name="debug" value="true"/> -->
    <arg name="paused" value="true"/>
    <arg name="gui" value="true"/>
  </include>

  <group ns="$(arg mav_name)">		

    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="model" value="$(find rotors_description)/urdf/$(arg mav_name)_qp_delta_manipulator.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg log_file)"/>
			<arg name="z" value="$(arg z)"/>
    </include>


    <node name="multi_objective_controller_node" pkg="rotors_control" type="multi_objective_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/multi_objective_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name)_qp.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>		

<!--
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name)_qp.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
		<node name="waypoint_publisher_file" pkg="rotors_gazebo" type="waypoint_publisher_file" output="screen" args="$(find rotors_gazebo)/resource/multi_objective_waypoints.txt"/>
-->
    <node name="hovering_example_qp" pkg="rotors_gazebo" type="hovering_example_qp" output="screen"/>
    
  </group>

	<!-- USER INTERFACE 
	<node name="rqt_publisher" pkg="rqt_publisher" type="rqt_publisher" output="screen"/>
	<node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" output="screen"/>
	-->
</launch>
